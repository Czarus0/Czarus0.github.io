{"version":3,"sources":["components/Landing.js","components/AboutMe.js","components/Contact.js","components/model/ProjectCard.js","components/Projects.js","components/model/Education.js","components/model/Experience.js","components/model/Skills.js","components/Resume.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Landing","className","col","src","alt","href","target","rel","aria-hidden","Component","AboutMe","Contact","area-hidden","ProjectCard","shadow","style","this","props","backgroundImageUrl","projectName","projectDescription","border","colored","projectLink","projectLinkName","Projects","state","activeTab","background","onChange","tabId","setState","ripple","toggleCategories","Education","fontSize","startYear","endYear","margin","schoolName","fontWeight","schoolProfile","marginBottom","whiteSpace","schoolDescription","Exceprience","list","map","item","index","key","jobName","jobProfession","joinDescription","jobDescription","Skills","skill","progress","Resume","Experience","Main","exact","path","component","App","document","querySelector","MaterialLayout","toggleDrawer","title","to","activeClassName","onClick","hideToggle","React","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86ce39a4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <Grid className=\"landing-grid\">\r\n                <Cell col={ 12 }>\r\n                    <img \r\n                        src=\"/images/cv.png\" \r\n                        alt=\"avatar\" \r\n                        className=\"avatar-img\"\r\n                    />\r\n\r\n                    <div className=\"banner-text\">\r\n                        <h1>Cezary Sanecki</h1>\r\n                        <h2>Java Developer</h2>\r\n                        <hr/>\r\n                        <p>\r\n                            Java | Spring | Hibernate | Git | MySQL\r\n                        </p>\r\n                        <div className=\"social-links\">\r\n                            {/* LinkedIn */}\r\n                            <a href=\"https://www.linkedin.com/in/cezary-sanecki/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\r\n                            </a>\r\n\r\n                            {/* GitHub */}\r\n                            <a href=\"https://github.com/DevCezz\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\r\n                            </a>\r\n\r\n                            {/* Twitter */}\r\n                            <a href=\"https://twitter.com/cezzdev\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <i className=\"fa fa-twitter\" aria-hidden=\"true\" />\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </Cell>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, { Component } from 'react';\r\n\r\nclass AboutMe extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"about-content\">\r\n                <div>\r\n                    Cześć,\r\n                    <br />\r\n                    nazywam się Cezary i od prawie dwóch lat zajmuje się zawodowo programowaniem. Prywatnie jestem\r\n                    szczęśliwym, świeżo upieczonym mężem a z wykształcenia budowlańcem (ukończyłem Budownictwo \r\n                    na Politechnice Warszawskiej). Od zawsze interesował mnie świat <strong>nowoczesnych \r\n                    technologii</strong>.\r\n                    <br />\r\n                    Początki swojej kariery zawodowej zaczynałem jako asystent projektanta budowlanego.\r\n                    Początkowo cieszyłem się z tego, że mogę zacząć zdobywać doświadczenie w wyuczonym \r\n                    zawodzie. Jednak rzeczywistość okazała się brutalna... Powtarzalność zadań, \r\n                    brak szansy na rozwój, zero kreatywności. To wszystko skumulowało się do \r\n                    frustracji. \r\n                    <br />\r\n                    Na szczęście w firmie <strong>znalazła się osoba, która zainspirowała mnie do \r\n                    zmiany</strong>. Pisała ona skrypty do AutoCad'a (program do kreślenia rysunków), \r\n                    które ułatwiały rysowanie zbrojenia. Bardzo mnie to zainteresowało i postanowiłem \r\n                    się tego nauczyć. \r\n                    <hr />\r\n                    Zacząłem od znanego, darmowego <strong>pdf'a do C++</strong> (\"Od zera do gier kodera\"). \r\n                    Przebrnąłem przez jego większą część i to było to! (chociaż do C++ miałem wcześniej \r\n                    dwa nieudane podejścia - na studiach z podstaw programowania miałem 3,5 ;) ). Następnie \r\n                    zakupiłem książkę \"Język C++. Szkoła programowania\" Stephen'a Praty, którą przerobiłem \"od \r\n                    deski do deski\". Dzięki niej napisałem swój pierwszy, większy program do symulowania \r\n                    wyników meczów piłkarskich angielskiej Premier League (losowa ilość zdobytych bramek \r\n                    była zależna od statystyk z poprzedniego sezonu). Nie znałem się do końca co, gdzie i \r\n                    jak przez co sam zaimplementowałem swoją własną listę czym podzieliłem się na forum&nbsp;\r\n                    <a href=\"https://forum.pasja-informatyki.pl/294593/ocena-pierwszego-malego-projektu\">\r\n                        <em>Pasja informatyki</em>\r\n                    </a>.\r\n                    <br />\r\n                    Jednak po namowach kolegi przeszedłem <strong>na Javę</strong>, który sam w niej pisał. \r\n                    Uznałem, ze warto spróbować i dzięki temu sam w niej obecnie koduję. Czytałem książki, \r\n                    robiłem kursy i pisałem wiele programów. To spowodowało, że rzuciłem pracę w budownictwie i \r\n                    postanowiłem szukać pracy w IT. Po miesiącu udało się! Dostałem szansę jako <strong>Junior \r\n                    Mainframe Developer</strong> (o COBOL'u nie miałem wtedy zielonego pojęcia). Było to wyzwanie, \r\n                    które na długo pozostanie w mojej pamięci.\r\n                    <hr />\r\n                    Po roku doświadczenia korporacyjnego doszedłem do wniosku, że jednak chcę mieć styczność z  \r\n                    programowaniem obiektowym w Javie (cały czas w zaciszu domowym się dokształcałem). Z tego \r\n                    powodu zmieniłem pracę i w końcu zostałem <strong>Java Developer'em</strong>, którym jestem \r\n                    już od niespełna roku.\r\n                    <br />\r\n                    Praca programisty to dla mnie rozwiązywanie problemów nie tylko technicznych, ale i także \r\n                    biznesowych. Najważniejsze jest w tym to, że można tego dokonywać na wiele sposób oraz \r\n                    wykazywać się kreatywnością. Obecnie w dalszym ciągu staram się pogłębiać wiedzę z \r\n                    Javy oraz jej <strong>framework'ów tj. Spring czy Hibernate</strong>, ale i także fascynują mnie \r\n                    zagadnienia związane z <strong>architekturą oprogramowania</strong>.\r\n                    <br />\r\n                    Podczas pracy w dwóch branżach nauczyłem się jednej, ważnej rzeczy. Najważniejszym aspektem \r\n                    są <strong>relacje międzyludzkie</strong>, praca w zgranym zespole, który motywuje się do \r\n                    działania i zawsze jest skory do pomocy. Pomimo nowoczesnych technologii to właśnie dzięki \r\n                    ludziom możemy uznać czy projekt jest bardzo dobry czy może jednak do niczego się nie nadaje.\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutMe;","import React, { Component } from 'react';\r\nimport { Grid, Cell, List, ListItem, ListItemContent } from 'react-mdl';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"contact-body\">\r\n                <Grid className=\"contact-grid\">\r\n                    <Cell col={ 6 }>\r\n                        <h2>Cezary Sanecki</h2>\r\n                        <img \r\n                            src=\"/images/me.png\"\r\n                            alt=\"avatar\"\r\n                        />\r\n                        <p>\r\n                            Skontaktuj się jeśli chciałbyś/-abyś rozpocząć ze mną współpracę.\r\n                        </p>\r\n                    </Cell>\r\n                    <Cell col={ 6 }>\r\n                        <h2>Kontakt</h2>\r\n                        <hr/>\r\n                        <div className=\"contact-list\">\r\n                            <List>\r\n                                <ListItem>\r\n                                    <ListItemContent className=\"contact-item\">\r\n                                        <i className=\"fa fa-phone-square\" area-hidden=\"true\" />\r\n                                        793-962-920\r\n                                    </ListItemContent>\r\n                                </ListItem>\r\n\r\n                                <ListItem>\r\n                                    <ListItemContent className=\"contact-item\">\r\n                                        <i className=\"fa fa-envelope\" area-hidden=\"true\" />\r\n                                        devcezz@gmail.com\r\n                                    </ListItemContent>\r\n                                </ListItem>\r\n                            </List>\r\n                        </div>\r\n                    </Cell>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Card, CardTitle, CardText, CardActions, Button } from 'react-mdl';\r\n\r\nclass ProjectCard extends Component {\r\n    render() {\r\n        return (\r\n            <Card shadow={ 5 } className=\"project-card\">\r\n                <CardTitle className=\"project-card-title\" style={ this.props.backgroundImageUrl }>\r\n                    { this.props.projectName }\r\n                </CardTitle>\r\n                <CardText>\r\n                { this.props.projectDescription }\r\n                </CardText>\r\n                <CardActions border>\r\n                    <Button colored>\r\n                        <a className=\"project-link\" href={ this.props.projectLink } target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            { this.props.projectLinkName }\r\n                        </a>\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectCard;","import React, { Component } from 'react';\r\nimport { Tabs, Tab, Grid, Cell } from 'react-mdl';\r\nimport ProjectCard from './model/ProjectCard';\r\n\r\nclass Projects extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTab: 0\r\n        }\r\n    }\r\n\r\n    toggleCategories() {\r\n        if(this.state.activeTab === 0) {\r\n            return (\r\n                <Grid>\r\n                    <Cell col={ 4 }>\r\n                        <ProjectCard \r\n                            projectName=\"#1 Drug List\" \r\n                            projectDescription=\"Wyświetlana jest lista leków, które można dowolnie sortować, dodawać, usuwać oraz modyfikować.\" \r\n                            backgroundImageUrl={{ background: 'url(/images/react.png) center / cover' }}\r\n                            projectLink=\"https://github.com/DevCezz/DrugListReact\"\r\n                            projectLinkName=\"GitHub\" \r\n                        />\r\n                    </Cell>\r\n                    <Cell col={ 4 }>\r\n                        <ProjectCard \r\n                            projectName=\"#2 My CV\" \r\n                            projectDescription=\"Moje wirtualne CV wraz z informacjami o moich projektach.\" \r\n                            backgroundImageUrl={{ background: 'url(/images/react.png) center / cover' }}\r\n                            projectLink=\"https://github.com/DevCezz/MyCV\"\r\n                            projectLinkName=\"GitHub\" \r\n                        />\r\n                    </Cell>\r\n                    <Cell col={ 4 }>\r\n                        <ProjectCard \r\n                            projectName=\"#3 BookApp Client\" \r\n                            projectDescription=\"Aplikacja korzystająca z API innej mojej aplikacji book-api w Spring'u.\" \r\n                            backgroundImageUrl={{ background: 'url(/images/react.png) center / cover' }}\r\n                            projectLink=\"https://github.com/DevCezz/BookAppClient\"\r\n                            projectLinkName=\"GitHub\" \r\n                        />\r\n                    </Cell>\r\n                </Grid>\r\n            )\r\n        } else if(this.state.activeTab === 1) {\r\n            return (\r\n                <Grid>\r\n                    <Cell col={ 4 }>\r\n                        <ProjectCard\r\n                            projectName=\"#1 MemoryGame\"\r\n                            projectDescription=\"Gra w Pamięć. Polega na znajdowaniu par - możliwość mierzenia czasu.\"\r\n                            backgroundImageUrl={{ background: 'url(/images/java.png) left / cover' }}\r\n                            projectLink=\"https://github.com/DevCezz/MemoryGame\"\r\n                            projectLinkName=\"GitHub\"\r\n                        />\r\n                    </Cell>\r\n                    <Cell col={ 4 }>\r\n                        <ProjectCard\r\n                            projectName=\"#2 PapperSoccer\"\r\n                            projectDescription=\"Gra w piłkę na papierze. Została napisana w oparciu o TDD.\"\r\n                            backgroundImageUrl={{ background: 'url(/images/java.png) left / cover' }}\r\n                            projectLink=\"https://github.com/DevCezz/PaperSoccer\"\r\n                            projectLinkName=\"GitHub\"\r\n                        />\r\n                    </Cell>\r\n                </Grid>\r\n            )\r\n        } else if(this.state.activeTab === 2) {\r\n            return (\r\n                <Grid>\r\n                    <Cell col={ 4 }>\r\n                        <ProjectCard \r\n                            projectName=\"#1 CarNet\" \r\n                            projectDescription=\"Aplikacja zarządzania komisem samochodowym.\" \r\n                            backgroundImageUrl={{ background: 'url(/images/spring.png) left / cover' }}\r\n                            projectLink=\"https://github.com/DevCezz/CarNet\"\r\n                            projectLinkName=\"GitHub\" \r\n                        />\r\n                    </Cell>\r\n                    <Cell col={ 4 }>\r\n                        <ProjectCard \r\n                            projectName=\"#2 ShopPage\" \r\n                            projectDescription=\"Aplikacja zarządzania sklepem z możliwością ich zakupu, dodawania nowych kategorii oraz produktów.\" \r\n                            backgroundImageUrl={{ background: 'url(/images/spring.png) left / cover' }}\r\n                            projectLink=\"https://github.com/DevCezz/ShopPage\"\r\n                            projectLinkName=\"GitHub\" \r\n                        />\r\n                    </Cell>\r\n                    <Cell col={ 4 }>\r\n                        <ProjectCard \r\n                            projectName=\"#3 MicroLoan\" \r\n                            projectDescription=\"Aplikacja zrobiona na potrzeby rekrutacji - zarządzanie pożyczkami.\" \r\n                            backgroundImageUrl={{ background: 'url(/images/spring.png) left / cover' }}\r\n                            projectLink=\"https://github.com/DevCezz/MicroLoan\"\r\n                            projectLinkName=\"GitHub\" \r\n                        />\r\n                    </Cell>\r\n                    <Cell col={ 4 }>\r\n                        <ProjectCard \r\n                            projectName=\"#4 BookAppServer\" \r\n                            projectDescription=\"Zwykła aplikacja CRUD'owa do zarządzania książkami.\" \r\n                            backgroundImageUrl={{ background: 'url(/images/spring.png) left / cover' }}\r\n                            projectLink=\"https://github.com/DevCezz/BookAppServer\"\r\n                            projectLinkName=\"GitHub\" \r\n                        />\r\n                    </Cell>\r\n                </Grid>\r\n            )\r\n        } else if(this.state.activeTab === 3) {\r\n            return (\r\n                <Grid>\r\n                    <Cell col={ 4 }>\r\n                        <ProjectCard \r\n                            projectName=\"#1 BlogPage\" \r\n                            projectDescription=\"Projekt dodawnia wpisów na bloga oraz możliwość ich edycji przez panel administratora\" \r\n                            backgroundImageUrl={{ background: 'url(/images/php.png) center / cover' }}\r\n                            projectLink=\"https://github.com/DevCezz/BlogPagePhp\"\r\n                            projectLinkName=\"GitHub\" \r\n                        />\r\n                    </Cell>\r\n                </Grid>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"project-body\">\r\n                <Tabs activeTab={ this.state.activeTab } onChange={ (tabId) => this.setState({ activeTab: tabId }) } ripple>\r\n                    <Tab>React</Tab>\r\n                    <Tab>Java</Tab>\r\n                    <Tab>Spring</Tab>\r\n                    <Tab>PHP</Tab>\r\n                </Tabs>\r\n\r\n                { this.toggleCategories() }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects;","import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\nclass Education extends Component {\r\n    render() {\r\n        return (\r\n            <Grid>\r\n                <Cell col={ 3 }>\r\n                    <p style={{ fontSize: '18px' }}>\r\n                        { this.props.startYear } - { this.props.endYear }\r\n                    </p>\r\n                </Cell>\r\n                <Cell col={ 9 }>\r\n                    <h4 style={{ fontSize: '30px', margin: '0' }}>{ this.props.schoolName }</h4>\r\n                    <h5 style={{ fontWeight: 'bold', fontSize: '16px', margin: '6px 0' }}>{ this.props.schoolProfile }</h5>\r\n                    <p style={{ marginBottom: '0', whiteSpace: 'pre-wrap' }}>\r\n                        { this.props.schoolDescription }\r\n                    </p>\r\n                </Cell>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Education;","import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\nclass Exceprience extends Component {\r\n    joinDescription(list) {\r\n        if(list) {\r\n            return list.map((item, index) =>\r\n                <div key={ index }>- { item }</div>\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Grid>\r\n                <Cell col={ 3 }>\r\n                    <p className=\"experience-date\">\r\n                        { this.props.startYear } - { this.props.endYear }\r\n                    </p>\r\n                </Cell>\r\n                <Cell col={ 9 }>\r\n                    <h4 className=\"experience-job-name\">\r\n                        { this.props.jobName }\r\n                    </h4>\r\n                    <h5 className=\"experience-job-profession\">\r\n                        { this.props.jobProfession }\r\n                    </h5>\r\n                    <div className=\"experience-job-desc\">\r\n                        { this.joinDescription(this.props.jobDescription) }\r\n                    </div>\r\n                </Cell>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Exceprience;","import React, { Component } from 'react';\r\nimport { Grid, Cell, ProgressBar } from 'react-mdl';\r\n\r\nclass Skills extends Component {\r\n    render() {\r\n        return (\r\n            <Grid>\r\n                <Cell col={ 1 }>\r\n                    { this.props.skill }\r\n                </Cell>\r\n                <Cell col={ 11 } className=\"skill-progress\">\r\n                    <ProgressBar className=\"skill-progress-bar\" \r\n                        progress={ this.props.progress }\r\n                    />\r\n                </Cell>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Skills;","import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\nimport Education from './model/Education';\r\nimport Experience from './model/Experience';\r\nimport Skills from './model/Skills';\r\n\r\nclass Resume extends Component {\r\n    render() {\r\n        return (\r\n            <Grid>\r\n                <Cell col={ 4 } className=\"resume-about-me\">\r\n                    <img \r\n                        src=\"/images/cv.png\"\r\n                        alt=\"avatar\"\r\n                    />\r\n                    <h2>Cezary Sanecki</h2>\r\n                    <h4>Java Developer</h4>\r\n                    <hr />\r\n                    <p>\r\n                        Moim celem zawodowym jest zostanie doświadczonym programistą Java ze znajomością \r\n                        zagadnień dotyczących architektury oprogramowania. Uważam, że praca zespołowa jest \r\n                        największą siłą realizowanego projektu. Posiadam prawie dwuletnie doświadczenie \r\n                        programistyczne, które zdobywałem na projektach dla dużego klienta z Niemiec, \r\n                        największego banku w Polsce oraz także w polskich firmach. Jestem odpowiedzialny \r\n                        za rozwiązywanie problemów biznesowych i ich implementację. W wolnym czasie ciągle \r\n                        pogłębiam wiedzę, aby spełnić swoje postanowienia.\r\n                    </p>\r\n                    <hr className=\"resume-bottom-hr\"/>\r\n                </Cell>\r\n                <Cell col={ 8 } className=\"resume-experience\">\r\n                    <h3 className=\"resume-experience-title\">Doświadczenie</h3>\r\n\r\n                    <Experience startYear=\"2020/03\" endYear=\"obecnie\"\r\n                        jobName=\"S&amp;T Services Polska Sp. z o.o.\"\r\n                        jobProfession=\"Programista JAVA\"\r\n                        jobDescription={\r\n                            [`Programowanie w Javie 8`,\r\n                            `Używanie framework’ów Spring Boot i Hibernate`,\r\n                            `Korzystanie z Git, MySQL i REST`,\r\n                            `Programowanie frontend'owe w Angularze`,\r\n                            `Wykorzystywanie docker'ów`] }\r\n                    />\r\n                    <Experience startYear=\"2019/06\" endYear=\"2020/02\"\r\n                        jobName=\"LekSeek Polska Sp. z o.o. Sp. k.\"\r\n                        jobProfession=\"Programista JAVA\"\r\n                        jobDescription={\r\n                            [`Programowanie w Javie 8, 11`,\r\n                            `Używanie framework’ów Spring (MVC, Security) i Hibernate`,\r\n                            `Korzystanie z Git, SVN, MySQL i REST`,\r\n                            `Wykorzystywanie wewnętrznego fremawork’a J2J (Java to JavaScript)`] }\r\n                    />\r\n                    <Experience startYear=\"2019/03\" endYear=\"2019/05\"\r\n                        jobName=\"Grupa Exorigo-Upos sp. z o.o. \"\r\n                        jobProfession=\"Programista JAVA/Analityk\"\r\n                        jobDescription={\r\n                            [`Programowanie w Javie 8`,\r\n                            `Używanie framework’ów Spring (MVC, Security) i Hibernate`,\r\n                            `Korzystanie z Git, Oracle database i REST`,\r\n                            `Używanie kostek OLAP’owych`,\r\n                            `Programowanie frontend'owe w JavaScript/JQuery`] }\r\n                    />\r\n                    <Experience startYear=\"2018/04\" endYear=\"2019/02\"\r\n                        jobName=\"Accenture Services Sp. z o.o.\"\r\n                        jobProfession=\"Mainframe Core Banking Developer\"\r\n                        jobDescription={\r\n                            ['Programowanie w COBOL, CICS i JCL na z/OS',\r\n                            'Tworzenie dokumentacji',\r\n                            'Programowanie w Javie na potrzeby replatformingu'] }\r\n                    />\r\n                    \r\n                    <hr />\r\n                    <h3 className=\"resume-experience-title\">Wykształcenie</h3>\r\n\r\n                    <Education startYear=\"2018/02\" endYear=\"2020/06\"\r\n                        schoolName=\"Politechnika Warszawska\"\r\n                        schoolProfile=\"Informatyka, Systemy Internetowe Wspomagania Zarządzania\"\r\n                        schoolDescription=\"magisterskie, studia niestacjonarne, ocena: ponad dobry\"\r\n                    />\r\n                    <Education startYear=\"2016/07\" endYear=\"2018/07\"\r\n                        schoolName=\"Politechnika Warszawska\"\r\n                        schoolProfile=\"Budownictwo, Konstrukcje Budowlane i Inżynierskie\"\r\n                        schoolDescription=\"magisterskie, studia niestacjonarne, ocena: celująca\"\r\n                    />\r\n                    <Education startYear=\"2012/07\" endYear=\"2016/07\"\r\n                        schoolName=\"Politechnika Warszawska\"\r\n                        schoolProfile=\"Budownictwo, Konstrukcje Budowlane i Inżynierskie\"\r\n                        schoolDescription=\"inżynierskie, studia stacjonarne, ocena: bardzo dobra\"\r\n                    />\r\n\r\n                    <hr />\r\n                    <h3 className=\"resume-experience-title\">Umiejętności</h3>\r\n\r\n                    <Skills skill=\"Java\" progress={ 75 } />\r\n                    <Skills skill=\"Spring\" progress={ 60 } />\r\n                    <Skills skill=\"Hibernate\" progress={ 50 } />\r\n                    <Skills skill=\"Git\" progress={ 50 } />\r\n                    <Skills skill=\"SVN\" progress={ 40 } />\r\n                    <Skills skill=\"MySQL\" progress={ 60 } />\r\n                    <Skills skill=\"Eclipse\" progress={ 50 } />\r\n                    <Skills skill=\"IntelliJ\" progress={ 40 } />\r\n                    <Skills skill=\"JUnit\" progress={ 40 } />\r\n                    <Skills skill=\"React\" progress={ 15 } />\r\n                    <Skills skill=\"Linux\" progress={ 15 } />\r\n                </Cell>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resume;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Landing from './Landing';\r\nimport AboutMe from './AboutMe';\r\nimport Contact from './Contact';\r\nimport Projects from './Projects';\r\nimport Resume from './Resume';\r\n\r\nconst Main = () => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={ Landing } />\r\n        <Route path=\"/aboutme\" component={ AboutMe } />\r\n        <Route path=\"/contact\" component={ Contact } />\r\n        <Route path=\"/projects\" component={ Projects } />\r\n        <Route path=\"/resume\" component={ Resume } />\r\n    </Switch>\r\n)\r\n\r\nexport default Main;","import React from 'react';\r\nimport './App.css';\r\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\r\nimport Main from './components/Main';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass App extends React.Component {\r\n    hideToggle() {\r\n        var selectorId = document.querySelector('.mdl-layout');\r\n        selectorId.MaterialLayout.toggleDrawer();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <Header className=\"header-color\" title={ <NavLink className=\"header-main-link\" to=\"/\">Home</NavLink> }>\r\n                    <Navigation>\r\n                        <NavLink activeClassName=\"chosen-page-header\" to=\"/resume\">CV</NavLink>\r\n                        <NavLink activeClassName=\"chosen-page-header\" to=\"/aboutme\">O mnie</NavLink>\r\n                        <NavLink activeClassName=\"chosen-page-header\" to=\"/projects\">Projekty</NavLink>\r\n                        <NavLink activeClassName=\"chosen-page-header\" to=\"/contact\">Kontakt</NavLink>\r\n                    </Navigation>\r\n                </Header>\r\n                <Drawer title={ <NavLink onClick={() => this.hideToggle()} className=\"drawer-main-link\" to=\"/\">Home</NavLink> }>\r\n                    <Navigation>\r\n                        <NavLink onClick={() => this.hideToggle()} activeClassName=\"chosen-page-drawer\" to=\"/resume\">CV</NavLink>\r\n                        <NavLink onClick={() => this.hideToggle()} activeClassName=\"chosen-page-drawer\" to=\"/aboutme\">O mnie</NavLink>\r\n                        <NavLink onClick={() => this.hideToggle()} activeClassName=\"chosen-page-drawer\" to=\"/projects\">Projekty</NavLink>\r\n                        <NavLink onClick={() => this.hideToggle()} activeClassName=\"chosen-page-drawer\" to=\"/contact\">Kontakt</NavLink>\r\n                    </Navigation>\r\n                </Drawer>\r\n                <Content>\r\n                    <Main />\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'react-mdl/extra/material.css';\r\nimport 'react-mdl/extra/material.js';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}